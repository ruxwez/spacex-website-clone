---
import type { ILaunchSectionContent } from "../../../types/sections/launchSection";
import { VideoBackground } from "../../backgrounds/videoBackground";
import { ContentLaunchSection } from "./contentLaunchSection";

interface Props {
  type?: "header" | "section";
  isVideo?: boolean;
  src: string;
  content: ILaunchSectionContent;
}

const {
  type: Element = "section",
  isVideo = false,
  src,
  content,
} = Astro.props;
---

<Element
  style={!isVideo
    ? `background:url('${src}') center center; background-size: cover;`
    : ""}
  class:list={["relative w-full h-screen"]}
>
  <div class="w-full h-full backdrop-brightness-75">
    <div class="container h-full flex items-end">
      <ContentLaunchSection content={content} client:load />
    </div>
  </div>
  <button
    class="buttonScrollScreen absolute bottom-14 left-1/2 -translate-x-1/2 p-4"
  >
    <svg
      width="30px"
      height="20px"
      class="animate-arrow-down"
      aria-label="more content below"
    >
      <path
        stroke="#ffffff"
        stroke-width="2px"
        fill="none"
        d="M2.000,5.000 L15.000,18.000 L28.000,5.000 "></path>
    </svg>
  </button>

  {
    isVideo && (
      <VideoBackground className="absolute top-0 left-0 -z-10" src={src} />
    )
  }
</Element>

<script>

  document.addEventListener("astro:page-load", () => {
    const buttonScrollScreen = document.querySelectorAll(".buttonScrollScreen");
    buttonScrollScreen.forEach((button) => {
      button.addEventListener("click", () => {
        window.scrollTo({
          top: window.scrollY + window.innerHeight,
          behavior: "smooth",
        });
      });
    });
  });
</script>
